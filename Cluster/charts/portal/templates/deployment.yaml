apiVersion: v1
kind: ConfigMap
metadata:
  name: portal-config
data:
  application.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information"
        }
      },
      "AllowedHosts": "*",
      "ldap": {
        "host": "openldap-service.lucent.svc",
        "issecured": true,
        "port": 636
      },
      "ldap_mgmt": {
        "administrator": "{{ default admin .Values.openldap.user }}",
        "credentials": "{{ default admin .Values.openldap.password }}",
        "domain": "{{ default lucent-dev.com .Values.openldap.domain }}"
      },
      "rabbit": {
        "host": "rabbitmq.lucent.svc",
        "user": "{{ .Values.rabbitmq.user }}",
        "credentials": "{{ .Values.rabbitmq.password }}"
      },
      "cassandra": {
        "endpoint": "cassandra.lucent.svc",
        "user": "{{ default test .Values.cassandra.user }}",
        "credentials": "{{ default test .Values.cassandra.password }}",
        "keyspace": "{{ default portal .Values.cassandra.keyspace }}",
        "format": "{{ default PROTOBUF .Values.cassandra.format }}"
      }
    }
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "portal.fullname" . }}
  labels:
    app: {{ template "portal.name" . }}
    chart: {{ template "portal.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: {{ template "portal.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "portal.name" . }}
        release: {{ .Release.Name }}
        component: portal
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: app-config
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: app-config
          configMap:
            name: portal-config
