apiVersion: v1
kind: ConfigMap
metadata:
  name: bidder-config
data:
  appsettings.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "System": "Information",
          "Microsoft": "Warning"
        }
      },
      "runtimeOptions": {
        "configProperties": {
          "System.GC.Server": true,
          "System.GC.Concurrent": true
        }
      },
      "AllowedHosts": "*",
      "rabbit": {
        "host": "rabbitmq.lucent.svc",
        "user": "{{ .Values.rabbitmq.user }}",
        "credentials": "{{ .Values.rabbitmq.password }}",
        "clusters": {
          "secondary" : {
            "user": "{{ .Values.rabbitmq.user }}",
            "credentials": "{{ .Values.rabbitmq.password }}",
            "host": "{{ .Values.rabbitmq.secondaryHost }}"
          }
        }
      },
      "load_shedding": {
        "strategy": "Head",
        "maxlatencyms": 100,
        "maxconcurrentrequests": 8,
        "maxqueuedepth": 12,
        "statuscode": 204,
        "isadaptive": true
      },
      "cassandra": {
        "endpoint": "cassandra.lucent.svc",
        "user": "{{ default "test" .Values.cassandra.user }}",
        "credentials": "{{ default "test" .Values.cassandra.password }}",
        "keyspace": "{{ default "portal" .Values.cassandra.keyspace }}",
        "format": "{{ default "PROTOBUF" .Values.cassandra.format }}"
      },
      "exchanges" : {
        "exchangelocation": "/etc/exchanges"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: exchanges
binaryData:
  SimpleExchange.dll: 
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "bidder.fullname" . }}
  labels:
    app: {{ template "bidder.name" . }}
    chart: {{ template "bidder.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: {{ template "bidder.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "bidder.name" . }}
        release: {{ .Release.Name }}
        component: bidder
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
    {{- with .Values.hostAlias }}
      hostAliases:
{{ toYaml . | indent 6 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/sh"
            - "-ec"
            - |
              echo "Getting configuration"
              cp /etc/config/*.json ./

              echo "Starting the bidder"
              dotnet Bidder.dll
          volumeMounts:
            - mountPath: /etc/config
              name: app-config
            - mountPath: /etc/exchanges
              name: exchange-config
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: app-config
          configMap:
            name: bidder-config
        - name: exchange-config
          configMap:
            name: exchanges
